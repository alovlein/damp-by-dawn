# Generated by Django 3.2.5 on 2021-07-12 02:46

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('main', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ForecastsDaily',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('query_date', models.DateTimeField()),
                ('forecast_date', models.DateTimeField()),
                ('icon', models.TextField(blank=True, null=True)),
                ('precipitation_chance', models.TextField(blank=True, null=True)),
                ('precipitation_amount', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'forecasts_daily',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ForecastsHourly',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('query_date', models.DateTimeField()),
                ('forecast_date', models.DateTimeField()),
                ('icon', models.TextField(blank=True, null=True)),
                ('temperature', models.FloatField()),
                ('wind_speed', models.FloatField()),
                ('wind_west', models.IntegerField()),
                ('wind_north', models.IntegerField()),
                ('sunlight', models.FloatField()),
            ],
            options={
                'db_table': 'forecasts_hourly',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Measurements',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sensor_id', models.CharField(blank=True, max_length=32, null=True)),
                ('measurement_date', models.DateTimeField()),
                ('temperature', models.FloatField()),
                ('sunlight', models.FloatField()),
                ('humidity', models.FloatField()),
                ('moisture', models.FloatField()),
                ('precipitation', models.FloatField()),
            ],
            options={
                'db_table': 'measurements',
                'managed': False,
            },
        ),
        migrations.DeleteModel(
            name='Sensors',
        ),
    ]
